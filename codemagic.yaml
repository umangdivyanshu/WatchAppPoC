# Automatically generated on 2021-07-30 UTC from https://codemagic.io/app/6103899fd885ed998448eb42/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  web-workflow:
    name: Web Workflow
    max_build_duration: 30
    environment:
      vars:
        GCLOUD_KEY_FILE: Encrypted(Z0FBQUFBQmhBLUZHOGRUUWs3dUN5SVNkc2t2UU4zWHgzTy16SVBfWWtfQVhNcE1SQllGdHdCSnFxaDFDVlpLd0xic3NFMjJGZzRHRVJyMU1xa09RQzNVcE9oZ25LbndYVUc3Q0s5Q1Mybkx2TndBOG84UlVmQTIwR2tTYmJDR19LSWFSaDc2OEo0YTFHOHU3SmVMb2FaakNfZUF4eEVabmNLbnAwQ1lUdld5SHJTc09xUUR2TExKdThfeXhWUVNrYi13WmpUM0RVNi1PZEtzejhBQjUyUFhWZTItbmRyRlRKSmxyYXl6ZmZxQ3dkM0FqUEtKLXh6bkVxYkE3eTJTa2dqMkFpcWRQS0lKMVhudHgtWGVUd2xOU01kZjVBQS1JVXZyU1B0M2I0ZUxfb2xVSnUyV3B2WTR3dHRVUmpjTVpQQW0td0pFcG81bkgzX19TSmpKUUJWbHNLTHIyT1lFQ0Q4VjhfUmRCMW5mU3d4WHhZWXQzMFRZS2xOSmwxSXhEN0Jja1BrS0dNX3JjRWY5aG9kaHpuQm43ZG1ISTZ0bVRjNWlyTVBJc1YwaENfMXNOSTJqcG9zUmVRQndCcnBUcUs5Zjh6N3Faa2t0QTNwUkxCckF4QnJicWM3X1RaV3VtRXA2bEZ2TllyMXI3VkF4TklnZVQ0dl9zaW45TDI4bnFnbTkydURwX2dqSVNqbG1sYU1idDZQeUtMN2dNNEJIbHJYVElsdm1Ga2JZenFrS2hjNERQNGcxb0FMZmhMX0JYbTJNRjFpN3lFQ1RHcjRpcGRrNThoOGV0SURMZjZEazE2OVo3aUIweUtzQ0lUM0JxR1h3Tjdiamdfb0gtS24xbkhUV0JsRkg2YjVoTkNfQ0JGVGpQdWl1cXhPVEtrRnQ4Y2puNDhjdVRGMTh0U0swcXk2dFhtVHJlUUtVbktrSTdfMXhRQUQ5Y0xqM1pYVmJOVHAwUGRXZXh1b1ZQR2dfS3Y4Y3A4WEtpVWdMRXlVUV9jaWc3eDVOX1hkYkxGQ1dOdlB6VGFhMm9CdnoySFc0RlJOZFRfZklwUGFyb1p6QnNDVjZxSlZVMFoxMUpTTXhqcjFxcXc2R092LVU5QmhndXFSemxrZmhSOWhPQjVIYzVqOHFoVFktT3R3ckR4NUNMTDZQZlhrdGNKSEl5ZU1tNE5vc1BCYVhwUEcxR3JpLW43WVZSWTM4Nlg4U2VwaTdTbEg1UEdnRV9mZDJNcVQ4MXVpQzFES1VqXzZkVkVOMWVVaE5XVzFfU0NoODFiSXpFcjU5WEVQZG1hREQ0bHdNSHI5TkREVVROaTVob3N5TzZDWFp3RnktUlp6bWRKeURpcWxCaDE2NTlSbDhFZF91SGJhOF9ZdWJoaFNwWDZ1RDhZMm01cVV1M2F0WFFWOGhPTW1KWTRqWFllaDlZLW1mSDNGSWdKdmw4Uy1hWkwyZ09wb1JwaHpRYXRDUHN5R2NUQk9tZW4zeTR3VmRWNzNrenc1VTJnYlJHdVBSTFozYzVYTl9FaEdmVUEya1dzc3F4WFRBV3ZvU2p3MFpJMW10Vm1ZOXJ0c1NwcFVxeGdDR0V3TXlJT3FncUlnTXBXU0VjeDNMZW9wa2xqN0d4V1Vsa0ptVkdlbkhkQkFobl9pYUpVaEs4TGN5T2FGYUdHbXhvZWNDNGlVTV9DM0plRWlBUS05TGQ1X21NX2hVNktOZFY4cG9PWEc4cVdkWjFPVXg0T3dSZlloOVFVRzZlZ2JFbG5LN3p4cjJRVEpHdFMxdlJlakw0dWEzejFDOTdwVVUxYjREQjdUb0R3NVRKZWluVV9nTkNSTDdmUUtBUFhPdEhUbmdiV0M4YXBUeGVFVk1VMVE1aWJ0Vmh1V0JvWHYyVUV0SnQzNF9oRW03RHkwQjZnb2JzMG1ZaHFTMlcwdTZJNTBuZVJWYjF1WEpHSW9YR29EeF82eUkwU1B6MEk5VDR2ZXp0NXJicmdtRHU2X1JPVzNBTktzNUZHdk1ORXBCZm5QeHM5akdWWUlKLWRtTktZOE1kWEVkbGl1YXdLcFBPcXNzcnUzT2p4N1dGVVZxdlZfYkdGek51S1dzc0JaZHdVREZCSVZIOWhmMkRVeEdQb2thQWRwY1JmLTJOLVQ1d1VOc3VyMWxVMWwxWF9LcllDRVlBLVZwTHhrd281NkJSdUs4VWp2cGQ2LS1jdkdFODdZNVltLXc2aGNfdEhIWnpGenFqaFpaRGYzVGhNYlpoYzlsZGlKelIzd1BUZk1TbGpJbEZ0RkszcVlHaFotbjhFWS03ci01d19uRnQyeXc2YTB1QWhuNlhRSTkyUlNCUmZma3N5NEJOLURWdEZCZTNsbWVUVUxBbm5qWk15dWpOWllFNHJ3ejJuclJTLU53ZU4zVFNyNEM4YkJLYXdFdVNQLXl2SE9RSmtWTi03S2lfa1FUcGFLY3BSTWNqSHZMVW03UkhYVUdTQ1J6UDZsemZEbjFKeUZQRWlaQTVZX3RQY0Z6ekVPLTg3cDBJMlFvSHZSZThqQml6bWVrMV96WWlZc29QX1JRa3lDeXNxZXpjVkFEOUhhRkFYckczRGtQM0VCXzFUTlVRajFaTWJUVnNmaWgzMFlRM2lQRTFFRlpWbGI2ZE9fdm5SOHFGdXg1ejJfcEJLWjhHaXoxbUd3TEVJTmpLZjZlbHQ3eWUwYlp0THpPN1A1dkFvWG1QSWJJRkVOOTg3ZEE4VWQ3TlZOQ3ZGVU12cjBJTUV4bFhBVTJ2TkRkbnUzRmJ2eko4eGNCYW1wZ2xlWHZDYmdSTW9nNlJwT1lpcjFCZU1ZaTB4REJ6OW9JYWdiUF83a3BjaG8xXzZFWjFKSVB6QXdoWUFpLV9EOVhBbndiNWtyQWxFbU9YUHlTQk9LX2NYZE9iSjFEbXZ3Sk9aYVlkVWMxY2pUdTBBdnhyX1dydktBcDlTRG0wejVIaV9WbW1MVDVjX2gtNWZMdWI0ellnb0N1QUNBT3loa3NZZjVSN3NoMngzMld1X1ZKRmVvZVU3MGNWeUJJV1R0OEd3NnhXVUNRWlEyeFl2SWkyUFZmZ3RXRUJwa0F2VnA5cFRUV2ZsQUpwam5sWjRsNkZjaUFVcFVCLXRTR0tIZHpXQ3VGWm5PMUREQktQczU5Z2p2ZFFxRjdPNlpSVTZTVTRxU0NQb2Fzel9jdG9VTDdzWlVIbTJhWFItNzRHUTlGVW1rVW5tWUphR3o3dExGcUQ1QUs3Nnd3UHZOTmhDYmJqY2czYzZwT2g0cHZxZGdRU3l6RjRkSEtNV0JMeUhZUFoxejBURDVlMERoS2tjeF9NY2NRTU80U01meHlidVJUdTM1T0tsRGRoVjdLaExfY25jX3pmTTVQVTkyZlZYalhYRG55SFhKMVdPNnV1bGJDX1duQVpBZVc1TTRCQzgxZ0NZVkxSSzRRSm1WU3pVWkN2blBjTk5RWmJiWHgxeHRZblgzNmdCZ1A5bFRuZV8xbkJZUk5RSDN3MjdBejFuZFRvblNjVEhycjgzN2dBQWxqd1lrY3dMTUpMUGszVU9qdjhvWDZHZ3djc0pKS0VXREFneURZT0ZSWXkxeWMyQWE2bEZLQXVoc3ZybUplTDRUdnhObUNNLWUxSWs0bzBuTU9hVmh5NUNNQjRnWk12QnozRG8zb2dya3lzX04wSHJFLWlNemtkZFFRazdKUzNtS01uRTJOXzNyVXh3WWhId0NyXzFSWHBzSFN3UU9Halh2eEVaNkVMQk5RUFZyZi1QNk80a0VEdF9LdHhLOTlweVFpdGo0cXpNb1hubjM4amdmelV3UHppYWZpZFBDYTNPc0d4eWZ6d2NrSkJTc3FSRWM5X1FHUU9QNnlqbUFaTXJrOS15TTk3RW9mcURUNmhvRElKbFZmTzNxbE1lZmJJQXI3Z1A1c3JNamFwX3dZRmdBQTNqSldpLU0ycnRZZnlJTmMtaks4NnJjU00tV080TEg1Nk1iVlhNNHBNQ0NHMzZEdGtmcklwVk8yc3pXTE0yLTY4UXJiUTdQWWRDeHNLcDhLZVFfRC1zQTVWV1hZbmZrclRuUTJQRWhEQVNPVDM0NVpvdzZVa21qNmU3VUpydy1fMnRSYWlTZ1dWUzgta1BkdzZWUVNxbFpiS19HNkczYnlfOU5pQkdab1BvdkRPZ3M1TG56V3lpczJ3c3RObmVUTVRVeHFiQm1NSjBZZzdYblNzNjQ5ZkRESWJ6MUpDWmJJTk1uXzZTVXRIX245RTVkSVRvdjZ6RHhsZ2Y4QTE3VHBCUHZ2SXIzZ3R5eUxjWWZLeXNONWgwRWU3U3d0QmRtMUQtVkVzOU1iTnhnYnhMTkZvcE1icDJlQjc3RlQwekp0WmNpVTR1aVFGZ19ZR0JEREMycmd5Zzd4UTVNcFVmXzhxS2JONGVYb3dLVmhnRXpzaDVzOW8wb2NsS0JpVXhBenFtOGtyeXdlY3BBc1Rra0FaOUdYNzZYdUI1OHcxMU95LWlYX1prcGpvTk11bWZRdFlSd0I0cVNZZnI4VUNUeGhjQy15Nk5abVduMnVNY0h6WWpKOUlFbUZXQlY3TDRydXA2UGxrbHBFYUQtWGhiXzY0S0VJWGdJYTB0OC1ZT0lKb2tJeVEwRzJ1bFp1MXpKa3U2aktscFBNNlc0WEdEd1lnNVg3OHZKWFVnQ3F6ZTEyeUlBaXJWQktSbHpOanQ1bUNRcmotaGFWMWVzNjB1Y0RjTURfWTJZajJhRl95YW53SFR5SFZIV1NtTC12dThNRzhaMUF1NWZvam9XcFlwWGJ0dWtrZ21hRktoS1FPSnFfRVJJaE1uaVJHNHdVR1hDMkVFNU9ZcnpZNmNrVm9MTkVqVk94X2p2Z1duQUxvVFAta3JMYlQ2eGFkLXlyZkpyYXFRYmFQS20zaDVCbXB3SWx1TFExNVhXa3VsMGVUQThPY3JZLU9wMFE1dXBmQU1ZSzNwMFlVbGNYeWdLaXZTcDhsMk8tWFk3dmNsbnBWVEJPTUk5RWFYTzlaSlJuQmVlOFNwM1RET3FTUEVMeUdDWVhELWZjZllRNXNKenZvYTRIQTdhQzhwelR6bnkway00dGNYM2lIUlMxWlRYbEc3N3Bzd09mMDZpbVJYZHlvVXg1RWdkUjh1emh6a3E4a3Y2NW1JMGZ2b1prdFBxRTB0WUlORmpndUdnYkVzeklCR2syYkRwSE9WZFI5MkpYS2huQ1pBRGlEOXZUODJtOFM3aFY3VF9NRGdjLXVrZGdyZUEwbUw3SzRmWjRwb1dHZ1NXeU4zUG9sQ2dzWEV2WkZiTnYwNm9XNXpvR2hDeGd1elhKbXhGZnhXYzVKbVNrMnEtVmxONW5GWFpsWEc1WWNPVkpDUUwzNzJJVkh1Q2c2Q0xuS0hCZlNESFpNUVBhd3N3cnh0SE0yUTlsSmlkZW5OQ3cxQ3l3c2FnMURGQzdNY3o0NGtJQ1ZFaXk0MmdNZThQVXQ2bXlaamNjMzg1UlhWYVdzem5TUlRxN0dMaUJOODVPZlBHWDNzSlp1LUtoU1NheU1OQ2QzdVVSZHpReG5LcmlkcXRta18wdmhyZV9FMG5DVjdlcjJYOEtLQlJIN2xZeU8zaXBpNXQtVmhHbzJHaUFndWgyeEtVZG1vZDNqclIyVVR0WVdGR1pTSGNrOU1ubXd2Z3JDTmRDU0prUW9jMjZIZFBTWW5Xa3E4VUUxX3dBd3RaZ096UGp6aFlnWk5lSTFBczBodVA1cHU4ZFUwVkZFQXJzUHBQM2ZWVDRuampuckllaWdXX1JiOENZeEd6MEdyckk9)
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: 'Execute integration test on Chrome browser'
        script: |
          mkdir -p test-results
          chromedriver --port=4444 &
          flutter config --enable-web
          flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name chrome
          kill -9 $(lsof -ti tcp:4444)
          
        #test_report: test-results/flutter.json --version
        
      - name: 'Execute integration test on Safari browser'
        script: |
          mkdir -p test-results
          echo ` which safaridriver`
          sudo safaridriver --enable
          safaridriver --port=4444 &
          flutter config --enable-web
          flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name safari
          kill -9 $(lsof -ti tcp:4444)

    artifacts:
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - udivyanshu8@gmail.com
          - narayansiddharth@gmail.com
  iOSFirebase-workflow:
    name: Web Workflow
    max_build_duration: 30
    environment:
      vars:
        GCLOUD_KEY_FILE: Encrypted(Z0FBQUFBQmhBLUZHOGRUUWs3dUN5SVNkc2t2UU4zWHgzTy16SVBfWWtfQVhNcE1SQllGdHdCSnFxaDFDVlpLd0xic3NFMjJGZzRHRVJyMU1xa09RQzNVcE9oZ25LbndYVUc3Q0s5Q1Mybkx2TndBOG84UlVmQTIwR2tTYmJDR19LSWFSaDc2OEo0YTFHOHU3SmVMb2FaakNfZUF4eEVabmNLbnAwQ1lUdld5SHJTc09xUUR2TExKdThfeXhWUVNrYi13WmpUM0RVNi1PZEtzejhBQjUyUFhWZTItbmRyRlRKSmxyYXl6ZmZxQ3dkM0FqUEtKLXh6bkVxYkE3eTJTa2dqMkFpcWRQS0lKMVhudHgtWGVUd2xOU01kZjVBQS1JVXZyU1B0M2I0ZUxfb2xVSnUyV3B2WTR3dHRVUmpjTVpQQW0td0pFcG81bkgzX19TSmpKUUJWbHNLTHIyT1lFQ0Q4VjhfUmRCMW5mU3d4WHhZWXQzMFRZS2xOSmwxSXhEN0Jja1BrS0dNX3JjRWY5aG9kaHpuQm43ZG1ISTZ0bVRjNWlyTVBJc1YwaENfMXNOSTJqcG9zUmVRQndCcnBUcUs5Zjh6N3Faa2t0QTNwUkxCckF4QnJicWM3X1RaV3VtRXA2bEZ2TllyMXI3VkF4TklnZVQ0dl9zaW45TDI4bnFnbTkydURwX2dqSVNqbG1sYU1idDZQeUtMN2dNNEJIbHJYVElsdm1Ga2JZenFrS2hjNERQNGcxb0FMZmhMX0JYbTJNRjFpN3lFQ1RHcjRpcGRrNThoOGV0SURMZjZEazE2OVo3aUIweUtzQ0lUM0JxR1h3Tjdiamdfb0gtS24xbkhUV0JsRkg2YjVoTkNfQ0JGVGpQdWl1cXhPVEtrRnQ4Y2puNDhjdVRGMTh0U0swcXk2dFhtVHJlUUtVbktrSTdfMXhRQUQ5Y0xqM1pYVmJOVHAwUGRXZXh1b1ZQR2dfS3Y4Y3A4WEtpVWdMRXlVUV9jaWc3eDVOX1hkYkxGQ1dOdlB6VGFhMm9CdnoySFc0RlJOZFRfZklwUGFyb1p6QnNDVjZxSlZVMFoxMUpTTXhqcjFxcXc2R092LVU5QmhndXFSemxrZmhSOWhPQjVIYzVqOHFoVFktT3R3ckR4NUNMTDZQZlhrdGNKSEl5ZU1tNE5vc1BCYVhwUEcxR3JpLW43WVZSWTM4Nlg4U2VwaTdTbEg1UEdnRV9mZDJNcVQ4MXVpQzFES1VqXzZkVkVOMWVVaE5XVzFfU0NoODFiSXpFcjU5WEVQZG1hREQ0bHdNSHI5TkREVVROaTVob3N5TzZDWFp3RnktUlp6bWRKeURpcWxCaDE2NTlSbDhFZF91SGJhOF9ZdWJoaFNwWDZ1RDhZMm01cVV1M2F0WFFWOGhPTW1KWTRqWFllaDlZLW1mSDNGSWdKdmw4Uy1hWkwyZ09wb1JwaHpRYXRDUHN5R2NUQk9tZW4zeTR3VmRWNzNrenc1VTJnYlJHdVBSTFozYzVYTl9FaEdmVUEya1dzc3F4WFRBV3ZvU2p3MFpJMW10Vm1ZOXJ0c1NwcFVxeGdDR0V3TXlJT3FncUlnTXBXU0VjeDNMZW9wa2xqN0d4V1Vsa0ptVkdlbkhkQkFobl9pYUpVaEs4TGN5T2FGYUdHbXhvZWNDNGlVTV9DM0plRWlBUS05TGQ1X21NX2hVNktOZFY4cG9PWEc4cVdkWjFPVXg0T3dSZlloOVFVRzZlZ2JFbG5LN3p4cjJRVEpHdFMxdlJlakw0dWEzejFDOTdwVVUxYjREQjdUb0R3NVRKZWluVV9nTkNSTDdmUUtBUFhPdEhUbmdiV0M4YXBUeGVFVk1VMVE1aWJ0Vmh1V0JvWHYyVUV0SnQzNF9oRW03RHkwQjZnb2JzMG1ZaHFTMlcwdTZJNTBuZVJWYjF1WEpHSW9YR29EeF82eUkwU1B6MEk5VDR2ZXp0NXJicmdtRHU2X1JPVzNBTktzNUZHdk1ORXBCZm5QeHM5akdWWUlKLWRtTktZOE1kWEVkbGl1YXdLcFBPcXNzcnUzT2p4N1dGVVZxdlZfYkdGek51S1dzc0JaZHdVREZCSVZIOWhmMkRVeEdQb2thQWRwY1JmLTJOLVQ1d1VOc3VyMWxVMWwxWF9LcllDRVlBLVZwTHhrd281NkJSdUs4VWp2cGQ2LS1jdkdFODdZNVltLXc2aGNfdEhIWnpGenFqaFpaRGYzVGhNYlpoYzlsZGlKelIzd1BUZk1TbGpJbEZ0RkszcVlHaFotbjhFWS03ci01d19uRnQyeXc2YTB1QWhuNlhRSTkyUlNCUmZma3N5NEJOLURWdEZCZTNsbWVUVUxBbm5qWk15dWpOWllFNHJ3ejJuclJTLU53ZU4zVFNyNEM4YkJLYXdFdVNQLXl2SE9RSmtWTi03S2lfa1FUcGFLY3BSTWNqSHZMVW03UkhYVUdTQ1J6UDZsemZEbjFKeUZQRWlaQTVZX3RQY0Z6ekVPLTg3cDBJMlFvSHZSZThqQml6bWVrMV96WWlZc29QX1JRa3lDeXNxZXpjVkFEOUhhRkFYckczRGtQM0VCXzFUTlVRajFaTWJUVnNmaWgzMFlRM2lQRTFFRlpWbGI2ZE9fdm5SOHFGdXg1ejJfcEJLWjhHaXoxbUd3TEVJTmpLZjZlbHQ3eWUwYlp0THpPN1A1dkFvWG1QSWJJRkVOOTg3ZEE4VWQ3TlZOQ3ZGVU12cjBJTUV4bFhBVTJ2TkRkbnUzRmJ2eko4eGNCYW1wZ2xlWHZDYmdSTW9nNlJwT1lpcjFCZU1ZaTB4REJ6OW9JYWdiUF83a3BjaG8xXzZFWjFKSVB6QXdoWUFpLV9EOVhBbndiNWtyQWxFbU9YUHlTQk9LX2NYZE9iSjFEbXZ3Sk9aYVlkVWMxY2pUdTBBdnhyX1dydktBcDlTRG0wejVIaV9WbW1MVDVjX2gtNWZMdWI0ellnb0N1QUNBT3loa3NZZjVSN3NoMngzMld1X1ZKRmVvZVU3MGNWeUJJV1R0OEd3NnhXVUNRWlEyeFl2SWkyUFZmZ3RXRUJwa0F2VnA5cFRUV2ZsQUpwam5sWjRsNkZjaUFVcFVCLXRTR0tIZHpXQ3VGWm5PMUREQktQczU5Z2p2ZFFxRjdPNlpSVTZTVTRxU0NQb2Fzel9jdG9VTDdzWlVIbTJhWFItNzRHUTlGVW1rVW5tWUphR3o3dExGcUQ1QUs3Nnd3UHZOTmhDYmJqY2czYzZwT2g0cHZxZGdRU3l6RjRkSEtNV0JMeUhZUFoxejBURDVlMERoS2tjeF9NY2NRTU80U01meHlidVJUdTM1T0tsRGRoVjdLaExfY25jX3pmTTVQVTkyZlZYalhYRG55SFhKMVdPNnV1bGJDX1duQVpBZVc1TTRCQzgxZ0NZVkxSSzRRSm1WU3pVWkN2blBjTk5RWmJiWHgxeHRZblgzNmdCZ1A5bFRuZV8xbkJZUk5RSDN3MjdBejFuZFRvblNjVEhycjgzN2dBQWxqd1lrY3dMTUpMUGszVU9qdjhvWDZHZ3djc0pKS0VXREFneURZT0ZSWXkxeWMyQWE2bEZLQXVoc3ZybUplTDRUdnhObUNNLWUxSWs0bzBuTU9hVmh5NUNNQjRnWk12QnozRG8zb2dya3lzX04wSHJFLWlNemtkZFFRazdKUzNtS01uRTJOXzNyVXh3WWhId0NyXzFSWHBzSFN3UU9Halh2eEVaNkVMQk5RUFZyZi1QNk80a0VEdF9LdHhLOTlweVFpdGo0cXpNb1hubjM4amdmelV3UHppYWZpZFBDYTNPc0d4eWZ6d2NrSkJTc3FSRWM5X1FHUU9QNnlqbUFaTXJrOS15TTk3RW9mcURUNmhvRElKbFZmTzNxbE1lZmJJQXI3Z1A1c3JNamFwX3dZRmdBQTNqSldpLU0ycnRZZnlJTmMtaks4NnJjU00tV080TEg1Nk1iVlhNNHBNQ0NHMzZEdGtmcklwVk8yc3pXTE0yLTY4UXJiUTdQWWRDeHNLcDhLZVFfRC1zQTVWV1hZbmZrclRuUTJQRWhEQVNPVDM0NVpvdzZVa21qNmU3VUpydy1fMnRSYWlTZ1dWUzgta1BkdzZWUVNxbFpiS19HNkczYnlfOU5pQkdab1BvdkRPZ3M1TG56V3lpczJ3c3RObmVUTVRVeHFiQm1NSjBZZzdYblNzNjQ5ZkRESWJ6MUpDWmJJTk1uXzZTVXRIX245RTVkSVRvdjZ6RHhsZ2Y4QTE3VHBCUHZ2SXIzZ3R5eUxjWWZLeXNONWgwRWU3U3d0QmRtMUQtVkVzOU1iTnhnYnhMTkZvcE1icDJlQjc3RlQwekp0WmNpVTR1aVFGZ19ZR0JEREMycmd5Zzd4UTVNcFVmXzhxS2JONGVYb3dLVmhnRXpzaDVzOW8wb2NsS0JpVXhBenFtOGtyeXdlY3BBc1Rra0FaOUdYNzZYdUI1OHcxMU95LWlYX1prcGpvTk11bWZRdFlSd0I0cVNZZnI4VUNUeGhjQy15Nk5abVduMnVNY0h6WWpKOUlFbUZXQlY3TDRydXA2UGxrbHBFYUQtWGhiXzY0S0VJWGdJYTB0OC1ZT0lKb2tJeVEwRzJ1bFp1MXpKa3U2aktscFBNNlc0WEdEd1lnNVg3OHZKWFVnQ3F6ZTEyeUlBaXJWQktSbHpOanQ1bUNRcmotaGFWMWVzNjB1Y0RjTURfWTJZajJhRl95YW53SFR5SFZIV1NtTC12dThNRzhaMUF1NWZvam9XcFlwWGJ0dWtrZ21hRktoS1FPSnFfRVJJaE1uaVJHNHdVR1hDMkVFNU9ZcnpZNmNrVm9MTkVqVk94X2p2Z1duQUxvVFAta3JMYlQ2eGFkLXlyZkpyYXFRYmFQS20zaDVCbXB3SWx1TFExNVhXa3VsMGVUQThPY3JZLU9wMFE1dXBmQU1ZSzNwMFlVbGNYeWdLaXZTcDhsMk8tWFk3dmNsbnBWVEJPTUk5RWFYTzlaSlJuQmVlOFNwM1RET3FTUEVMeUdDWVhELWZjZllRNXNKenZvYTRIQTdhQzhwelR6bnkway00dGNYM2lIUlMxWlRYbEc3N3Bzd09mMDZpbVJYZHlvVXg1RWdkUjh1emh6a3E4a3Y2NW1JMGZ2b1prdFBxRTB0WUlORmpndUdnYkVzeklCR2syYkRwSE9WZFI5MkpYS2huQ1pBRGlEOXZUODJtOFM3aFY3VF9NRGdjLXVrZGdyZUEwbUw3SzRmWjRwb1dHZ1NXeU4zUG9sQ2dzWEV2WkZiTnYwNm9XNXpvR2hDeGd1elhKbXhGZnhXYzVKbVNrMnEtVmxONW5GWFpsWEc1WWNPVkpDUUwzNzJJVkh1Q2c2Q0xuS0hCZlNESFpNUVBhd3N3cnh0SE0yUTlsSmlkZW5OQ3cxQ3l3c2FnMURGQzdNY3o0NGtJQ1ZFaXk0MmdNZThQVXQ2bXlaamNjMzg1UlhWYVdzem5TUlRxN0dMaUJOODVPZlBHWDNzSlp1LUtoU1NheU1OQ2QzdVVSZHpReG5LcmlkcXRta18wdmhyZV9FMG5DVjdlcjJYOEtLQlJIN2xZeU8zaXBpNXQtVmhHbzJHaUFndWgyeEtVZG1vZDNqclIyVVR0WVdGR1pTSGNrOU1ubXd2Z3JDTmRDU0prUW9jMjZIZFBTWW5Xa3E4VUUxX3dBd3RaZ096UGp6aFlnWk5lSTFBczBodVA1cHU4ZFUwVkZFQXJzUHBQM2ZWVDRuampuckllaWdXX1JiOENZeEd6MEdyckk9)
        APP_STORE_CONNECT_ISSUER_ID: 513ca88c-1377-4dba-9b28-45e7db34f510
        APP_STORE_CONNECT_KEY_IDENTIFIER: 4KSMTR6432
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmhFSjB0NGltY0QzX21kNlZfRlpmWXI1RnlHTjVPZ1ozTWRmdi1SZThHejBfa04zaDEzWlRZeVRvM3Ryd3JsNzA5Vk92M0EzWm9fVDdpUlF1S3lZWUktenZJT2lNMjNjRjZLbkZPVHAtWjRsSzBsRFJ1TW1hLXRDWFlITUNrSGtfMUlqS245VTJyR0lQakZzR2FUOXVHZUZBRmV1Z0ktRHljMGFIcDR2SjU0cVhXNHlWX2c4UUxIZ3RCYVdFTW1mMldObTFhaTh6LWFZTG9aWVdWY2hxLS13X2FxQXVWTk1vQ29RV1RUWXhhbm1qUnd4em01Nl9LN1JxTmtHeEFMSkMyc0RwSUVZb2o0aloycUhLdnlTdVYxWVFJY0pFZDJEOGtDalZuWFJZcHV6THBlbGthRGFZZlBEV2RjekFoeTVTeTFvVW9VZEc0T0FtLWRnOTdQVW1KNlRZRVJ0YktXc1J6Z3ZxTEVLeExhd1FWbDBRaHNnSlNuenY2NGhqd3RnMGU5eVRKWC1iU1JObzE1Y1VUaXIzVjBoUVBncFZHS01fOVEwbUkxRG01dUl3aEJDcz0=)
        CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmhFSjB0MGtONFh6dFB4aEx1Sm5zUDduanA0dHVZSElEQ2ZxaEptYkRGLWFUTE04NFdpaENDamV4QlIya0FwcmJsOTVYZ1FqSXJOZHJpS2JlYjRHUFZDNkhvY0lyaEkzX2dSNUhBWUk3Znc2eVRyUHUyMkd1NmhJMGJGNjRkTEhySkZnOXg5N3Vya05zTENiT2x2ajBlUXRZOWswMEpIWFllUmlHYmRsUlRZLXlic1U4cXp2dloyNjRBU0VpeW9BZTZfYzMycE85eE9KcWlkVlQteDRfRU1rYnZSdFBWUEJJQmQ0Zy1BZFJtVFlnSDU3R0xBQlpTTloxbUlfTlA4WkZKYzA5VklraDNLZGIzczJ5RDU4M0ZVNTcxVjNJTHRwTzJwalUtREluT05hYmJOZHViT1lJWklTOVpmNjFtcUlNOWxPNTNkaGRoblZTeGJDbEFyRVIydkFxUl9sYUFUbFhQd0dDYkt5eUhBZFFZd09hbXl2dzh4TVFwNlNKbm1lRHBJcjFJSm91T0doU1dXNDhXVElyb0NoejBRZjY5Z1V5SEFXanlwT1pJZUJuQUFnU1AyRGZlZzlpSkdDRm5fbVpiRTBuN2NDaG9jeHJ1cEM3eG84VFllNklKdG1pUE9pejZDdmVVQ2pSREY0elNabEY2TkhDNEp4QUVrOERzRjg1cVBQNDc3bjR6eGFfN3lmd0NaOW5KM1BNOGE0MmFuM0IwM2lmU2w0Tm5xLURnSDMzNmpJRTBPOXZRMmJNSHNRUXdZUGdLSmpNOE5YOGtzNVNPSUtQRFIzcTJZM1YwaUFndjN1SUZ2RFhwcXdQYm1zazEwWmdQYzl4clp1MG56YmFWMUpQRTR0QmI5STFEYlJTVDh5QXdSMERPbExMZTZoX0NHS294bEhabTBobkRpU3Z6c2lRVWJ3LW5Ba01RVlhtM00xSnJWVEZUNWtiRmRZSFY1c2MxZmJTN3hxNnZxVFhJUVZ0NXp0a2NWbkNOdkplMy1aM0wybUxrUTBEOWJwNUhETTBHOVFzNkM1RzhuYXY5T0hhZUhmTzdkNHRCQmE4UWFuN29lOUtkRzI2SEhtM3ZaT25PSzdLWnpuVFhRbTZVQ2ZfZFByMWdmR205TmRlZmJSWHRLaE52VWljb283djNTQ25RVURuRkVRbDFJQ01TWF9fTm9VZXRPR2JFYmNnaVY4V3FueWdjQWRaaGNDTEtrelVVTkhPdGltMzdfTzN6SlUwOVBDREtkbE1VTzhKdHJpcjJidFdhaHFSeEtoSFVMeklBWnljbW5TUklRZDNyRXdNNF9nZENra05faWZQZHhoVm45WnQ5NmhXcnA3eXlPT09JZ0xkX1RFS1N4Tzd1TUd4SEs4dDBOLVVSQ3BvV0JRQUNPdFdsTXJjckVMbU5heXpWeG5IejZ0Q3FlUHRfc0s5UWpsR21Wd1JESnFBWmhXZkd5MDRrdFhmZTdXaVJ0TC1la2ZFc0JrYzBrNjJoX2EwbEl0MW5KcW9vREVISVVhbnFDWFlvNktkNGVZR19RUUxKSzJNNk5GeEQ5X1VEOHZhbzE3NXc2bFRqSDBGUm0xWjV2bkw5S2JCTW1LSlVxOUF3TlpVd0dLQmVDYXhfaC1SVTlqWWZNZHZTajcxYXhTeHNiSU50eTRHak5zSVBLbWxfdjR5QTdXV2Z2ZnVRRVVCclZ6eGFlak4xVDliX2F0TXJUR1l1QkFScGwxWTRhWE8zcEVmRHJaRHljNlQ2SE9tcmx6aGZzSGphUDNnR3pjcTloTHh3NnNkd3ppdmhoWXdBamM3NTVBblBydkdhTVIxT0Itb1JkWHpLWHc0UzdDVG5ENGU2WXB6YnhkRkVBd1l3ZkVWRG1UajY3YzVTYjY1aWRfUTN0eGxHSlVuOXB3Q1ZzOFd3c1Nrb055dnM5bk5BUThSbHNqYUlINHVhRG5VOWc5cDc2RGFWOG56aV9FZW1qTDJDaE00bjlxQ0VRdUxNN2R2c0xRLVc2amROQUcySUZVTWlkOU94al9adUZlR2IxMDJmaTdLbkNlajBTVVl5M0tzSW5sdTVvbFBBdUJNRGRjVFBKblotdDZ1eEYxSFNVY0phWC1BZVVodFJOSGxDUWNVcF9LeWt1ZzF1enlrVjZRek5iS3NDSGJlNXcxaU8wU2J2SVpqRTRNck1Wei13TmRIclNDYnh5VDFETzViN2s1N0FSMV9EYWt4R1RXWWNGR1JjOUNQSkIwU3NfcjZEbldlSEFxT2VzeUd5cHNodkg5ekJPSm9TWlhRdVRmc2hIeUxwVXpFc1ZTaEh4aldPS2tsUlZtZFl6blBsTEI4U21JaTVMTTRWNUpoc2pJM1lXSXZpbTQ5Y1dRNWJzT3Iyd0VCUVlwZk9CSGJ2emxvR1M2a1puajZIZ0xxSWdTYnc4d0F0bDJxU21ONWFlVExFamthdzFWUnQ5aUJOSy1qMERRdlFQVUpCczNGRkFoWUVxdGh4WDU3ZVlOM21EM3pVMi1NOVZsd1MydXg4YkpZcGRGOUViTG16OG1wMEJXVHN4T0hkZzltQ1dMODMtb1o1U3lDSFI2N1ZXeUxfV3ZrRVZ0VXpoTXlHMlJYWUFHbGlrMTdBR3BWUVFWUGY4aWJvajVSMUFQd3IwSUlhQ3I1TFBmeTI1eFMwTTR0OHBNQThhZmx1X0M0WUZQVVloWkk3NmxjMEd1a1oyeUlNaVNGNDU1ZjZtME80YjZ5LWdOX0RyZkZIalQ0WTEyMkoxVW05Y0RHMUJlUjUxcUh1RWtMSlotbWRGMGl1REgxOVRvdFIxa0VjNlpRS0NZbzgxSmI3TDJiWThZVGRhMTluMFBnVVBSakJlU0gtYnRrY3h4SXd2a0J6SjBuclN1NzV2TnhBbGVNZ0lvQzJadkQzaGtid2tXVnh5b3k0dmp4V01nMUJoNUZsSVl5ZC1BT29XR0ZUZWtLSndZZkRJUDJuSHlqcEZkeldKVUZnNTZWelNsZ0wxMlppN3p4ZXQtc3dsNl9maE9jTnlVUXh6Qk1LVF9fMExLYVVrTVowT0JFQlJHN2tiX0N0TVBLM292eEVuUGpC)
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: 'AppStore Connect and Pod install'
        script: |
          flutter packages pub get
          find . -name "Podfile" -execdir pod install \;
      - name: 'Initialize Keychain'
        script: |
          keychain initialize
      - name: 'Fetch Signing Files'
        script: |
          app-store-connect fetch-signing-files $(xcode-project detect-bundle-id) --type IOS_APP_STORE --create
      - name: 'Add Certificate'
        script: |
          keychain add-certificates
      - name: 'Setup code signing settings on xcode project'
        script: |
          xcode-project use-profiles
      - name: 'Execute integration test on Firebase'
        script: |
          output="../build/ios_integ"
          product="build/ios_integ/Build/Products"
          dev_target="14.5"
          echo "Flutter Build Started For iOS"
          echo `pwd`
          flutter build ios integration_test/app_test.dart --debug --codesign
          echo "Starting xcode Build..."
          pushd ios
          echo `pwd`
          xcodebuild -allowProvisioningUpdates -workspace Runner.xcworkspace -scheme Runner -config Flutter/Debug.xcconfig -derivedDataPath $output -sdk iphoneos build-for-testing
          popd

          echo "Preparing the zip"
          pushd $product
          echo `pwd`
          echo "Listing the directory..."
          echo `ls`
          xctestrun=$(ls Runner*.xctestrun)
          zip -r "ios_tests.zip" "Release-iphoneos" $xctestrun
          popd

          echo $GCLOUD_KEY_FILE | base64 --decode > ./gcloud_key_file.json

          gcloud auth activate-service-account --key-file=gcloud_key_file.json

          gcloud --quiet config set project watchapppoc-9e24e

          gcloud firebase test ios run --test "build/ios_integ/Build/Products/ios_tests.zip" --device model=iphone8,version=13.6,locale=en_US,orientation=portrait --timeout 5m

    artifacts:
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - udivyanshu8@gmail.com
          - narayansiddharth@gmail.com
