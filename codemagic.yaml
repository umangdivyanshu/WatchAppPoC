# Automatically generated on 2021-07-30 UTC from https://codemagic.io/app/6103899fd885ed998448eb42/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  yaml-workflow:
    name: YAML Workflow
    max_build_duration: 60
    environment:
      vars:
        GCLOUD_KEY_FILE: Encrypted(Z0FBQUFBQmhBLUZHOGRUUWs3dUN5SVNkc2t2UU4zWHgzTy16SVBfWWtfQVhNcE1SQllGdHdCSnFxaDFDVlpLd0xic3NFMjJGZzRHRVJyMU1xa09RQzNVcE9oZ25LbndYVUc3Q0s5Q1Mybkx2TndBOG84UlVmQTIwR2tTYmJDR19LSWFSaDc2OEo0YTFHOHU3SmVMb2FaakNfZUF4eEVabmNLbnAwQ1lUdld5SHJTc09xUUR2TExKdThfeXhWUVNrYi13WmpUM0RVNi1PZEtzejhBQjUyUFhWZTItbmRyRlRKSmxyYXl6ZmZxQ3dkM0FqUEtKLXh6bkVxYkE3eTJTa2dqMkFpcWRQS0lKMVhudHgtWGVUd2xOU01kZjVBQS1JVXZyU1B0M2I0ZUxfb2xVSnUyV3B2WTR3dHRVUmpjTVpQQW0td0pFcG81bkgzX19TSmpKUUJWbHNLTHIyT1lFQ0Q4VjhfUmRCMW5mU3d4WHhZWXQzMFRZS2xOSmwxSXhEN0Jja1BrS0dNX3JjRWY5aG9kaHpuQm43ZG1ISTZ0bVRjNWlyTVBJc1YwaENfMXNOSTJqcG9zUmVRQndCcnBUcUs5Zjh6N3Faa2t0QTNwUkxCckF4QnJicWM3X1RaV3VtRXA2bEZ2TllyMXI3VkF4TklnZVQ0dl9zaW45TDI4bnFnbTkydURwX2dqSVNqbG1sYU1idDZQeUtMN2dNNEJIbHJYVElsdm1Ga2JZenFrS2hjNERQNGcxb0FMZmhMX0JYbTJNRjFpN3lFQ1RHcjRpcGRrNThoOGV0SURMZjZEazE2OVo3aUIweUtzQ0lUM0JxR1h3Tjdiamdfb0gtS24xbkhUV0JsRkg2YjVoTkNfQ0JGVGpQdWl1cXhPVEtrRnQ4Y2puNDhjdVRGMTh0U0swcXk2dFhtVHJlUUtVbktrSTdfMXhRQUQ5Y0xqM1pYVmJOVHAwUGRXZXh1b1ZQR2dfS3Y4Y3A4WEtpVWdMRXlVUV9jaWc3eDVOX1hkYkxGQ1dOdlB6VGFhMm9CdnoySFc0RlJOZFRfZklwUGFyb1p6QnNDVjZxSlZVMFoxMUpTTXhqcjFxcXc2R092LVU5QmhndXFSemxrZmhSOWhPQjVIYzVqOHFoVFktT3R3ckR4NUNMTDZQZlhrdGNKSEl5ZU1tNE5vc1BCYVhwUEcxR3JpLW43WVZSWTM4Nlg4U2VwaTdTbEg1UEdnRV9mZDJNcVQ4MXVpQzFES1VqXzZkVkVOMWVVaE5XVzFfU0NoODFiSXpFcjU5WEVQZG1hREQ0bHdNSHI5TkREVVROaTVob3N5TzZDWFp3RnktUlp6bWRKeURpcWxCaDE2NTlSbDhFZF91SGJhOF9ZdWJoaFNwWDZ1RDhZMm01cVV1M2F0WFFWOGhPTW1KWTRqWFllaDlZLW1mSDNGSWdKdmw4Uy1hWkwyZ09wb1JwaHpRYXRDUHN5R2NUQk9tZW4zeTR3VmRWNzNrenc1VTJnYlJHdVBSTFozYzVYTl9FaEdmVUEya1dzc3F4WFRBV3ZvU2p3MFpJMW10Vm1ZOXJ0c1NwcFVxeGdDR0V3TXlJT3FncUlnTXBXU0VjeDNMZW9wa2xqN0d4V1Vsa0ptVkdlbkhkQkFobl9pYUpVaEs4TGN5T2FGYUdHbXhvZWNDNGlVTV9DM0plRWlBUS05TGQ1X21NX2hVNktOZFY4cG9PWEc4cVdkWjFPVXg0T3dSZlloOVFVRzZlZ2JFbG5LN3p4cjJRVEpHdFMxdlJlakw0dWEzejFDOTdwVVUxYjREQjdUb0R3NVRKZWluVV9nTkNSTDdmUUtBUFhPdEhUbmdiV0M4YXBUeGVFVk1VMVE1aWJ0Vmh1V0JvWHYyVUV0SnQzNF9oRW03RHkwQjZnb2JzMG1ZaHFTMlcwdTZJNTBuZVJWYjF1WEpHSW9YR29EeF82eUkwU1B6MEk5VDR2ZXp0NXJicmdtRHU2X1JPVzNBTktzNUZHdk1ORXBCZm5QeHM5akdWWUlKLWRtTktZOE1kWEVkbGl1YXdLcFBPcXNzcnUzT2p4N1dGVVZxdlZfYkdGek51S1dzc0JaZHdVREZCSVZIOWhmMkRVeEdQb2thQWRwY1JmLTJOLVQ1d1VOc3VyMWxVMWwxWF9LcllDRVlBLVZwTHhrd281NkJSdUs4VWp2cGQ2LS1jdkdFODdZNVltLXc2aGNfdEhIWnpGenFqaFpaRGYzVGhNYlpoYzlsZGlKelIzd1BUZk1TbGpJbEZ0RkszcVlHaFotbjhFWS03ci01d19uRnQyeXc2YTB1QWhuNlhRSTkyUlNCUmZma3N5NEJOLURWdEZCZTNsbWVUVUxBbm5qWk15dWpOWllFNHJ3ejJuclJTLU53ZU4zVFNyNEM4YkJLYXdFdVNQLXl2SE9RSmtWTi03S2lfa1FUcGFLY3BSTWNqSHZMVW03UkhYVUdTQ1J6UDZsemZEbjFKeUZQRWlaQTVZX3RQY0Z6ekVPLTg3cDBJMlFvSHZSZThqQml6bWVrMV96WWlZc29QX1JRa3lDeXNxZXpjVkFEOUhhRkFYckczRGtQM0VCXzFUTlVRajFaTWJUVnNmaWgzMFlRM2lQRTFFRlpWbGI2ZE9fdm5SOHFGdXg1ejJfcEJLWjhHaXoxbUd3TEVJTmpLZjZlbHQ3eWUwYlp0THpPN1A1dkFvWG1QSWJJRkVOOTg3ZEE4VWQ3TlZOQ3ZGVU12cjBJTUV4bFhBVTJ2TkRkbnUzRmJ2eko4eGNCYW1wZ2xlWHZDYmdSTW9nNlJwT1lpcjFCZU1ZaTB4REJ6OW9JYWdiUF83a3BjaG8xXzZFWjFKSVB6QXdoWUFpLV9EOVhBbndiNWtyQWxFbU9YUHlTQk9LX2NYZE9iSjFEbXZ3Sk9aYVlkVWMxY2pUdTBBdnhyX1dydktBcDlTRG0wejVIaV9WbW1MVDVjX2gtNWZMdWI0ellnb0N1QUNBT3loa3NZZjVSN3NoMngzMld1X1ZKRmVvZVU3MGNWeUJJV1R0OEd3NnhXVUNRWlEyeFl2SWkyUFZmZ3RXRUJwa0F2VnA5cFRUV2ZsQUpwam5sWjRsNkZjaUFVcFVCLXRTR0tIZHpXQ3VGWm5PMUREQktQczU5Z2p2ZFFxRjdPNlpSVTZTVTRxU0NQb2Fzel9jdG9VTDdzWlVIbTJhWFItNzRHUTlGVW1rVW5tWUphR3o3dExGcUQ1QUs3Nnd3UHZOTmhDYmJqY2czYzZwT2g0cHZxZGdRU3l6RjRkSEtNV0JMeUhZUFoxejBURDVlMERoS2tjeF9NY2NRTU80U01meHlidVJUdTM1T0tsRGRoVjdLaExfY25jX3pmTTVQVTkyZlZYalhYRG55SFhKMVdPNnV1bGJDX1duQVpBZVc1TTRCQzgxZ0NZVkxSSzRRSm1WU3pVWkN2blBjTk5RWmJiWHgxeHRZblgzNmdCZ1A5bFRuZV8xbkJZUk5RSDN3MjdBejFuZFRvblNjVEhycjgzN2dBQWxqd1lrY3dMTUpMUGszVU9qdjhvWDZHZ3djc0pKS0VXREFneURZT0ZSWXkxeWMyQWE2bEZLQXVoc3ZybUplTDRUdnhObUNNLWUxSWs0bzBuTU9hVmh5NUNNQjRnWk12QnozRG8zb2dya3lzX04wSHJFLWlNemtkZFFRazdKUzNtS01uRTJOXzNyVXh3WWhId0NyXzFSWHBzSFN3UU9Halh2eEVaNkVMQk5RUFZyZi1QNk80a0VEdF9LdHhLOTlweVFpdGo0cXpNb1hubjM4amdmelV3UHppYWZpZFBDYTNPc0d4eWZ6d2NrSkJTc3FSRWM5X1FHUU9QNnlqbUFaTXJrOS15TTk3RW9mcURUNmhvRElKbFZmTzNxbE1lZmJJQXI3Z1A1c3JNamFwX3dZRmdBQTNqSldpLU0ycnRZZnlJTmMtaks4NnJjU00tV080TEg1Nk1iVlhNNHBNQ0NHMzZEdGtmcklwVk8yc3pXTE0yLTY4UXJiUTdQWWRDeHNLcDhLZVFfRC1zQTVWV1hZbmZrclRuUTJQRWhEQVNPVDM0NVpvdzZVa21qNmU3VUpydy1fMnRSYWlTZ1dWUzgta1BkdzZWUVNxbFpiS19HNkczYnlfOU5pQkdab1BvdkRPZ3M1TG56V3lpczJ3c3RObmVUTVRVeHFiQm1NSjBZZzdYblNzNjQ5ZkRESWJ6MUpDWmJJTk1uXzZTVXRIX245RTVkSVRvdjZ6RHhsZ2Y4QTE3VHBCUHZ2SXIzZ3R5eUxjWWZLeXNONWgwRWU3U3d0QmRtMUQtVkVzOU1iTnhnYnhMTkZvcE1icDJlQjc3RlQwekp0WmNpVTR1aVFGZ19ZR0JEREMycmd5Zzd4UTVNcFVmXzhxS2JONGVYb3dLVmhnRXpzaDVzOW8wb2NsS0JpVXhBenFtOGtyeXdlY3BBc1Rra0FaOUdYNzZYdUI1OHcxMU95LWlYX1prcGpvTk11bWZRdFlSd0I0cVNZZnI4VUNUeGhjQy15Nk5abVduMnVNY0h6WWpKOUlFbUZXQlY3TDRydXA2UGxrbHBFYUQtWGhiXzY0S0VJWGdJYTB0OC1ZT0lKb2tJeVEwRzJ1bFp1MXpKa3U2aktscFBNNlc0WEdEd1lnNVg3OHZKWFVnQ3F6ZTEyeUlBaXJWQktSbHpOanQ1bUNRcmotaGFWMWVzNjB1Y0RjTURfWTJZajJhRl95YW53SFR5SFZIV1NtTC12dThNRzhaMUF1NWZvam9XcFlwWGJ0dWtrZ21hRktoS1FPSnFfRVJJaE1uaVJHNHdVR1hDMkVFNU9ZcnpZNmNrVm9MTkVqVk94X2p2Z1duQUxvVFAta3JMYlQ2eGFkLXlyZkpyYXFRYmFQS20zaDVCbXB3SWx1TFExNVhXa3VsMGVUQThPY3JZLU9wMFE1dXBmQU1ZSzNwMFlVbGNYeWdLaXZTcDhsMk8tWFk3dmNsbnBWVEJPTUk5RWFYTzlaSlJuQmVlOFNwM1RET3FTUEVMeUdDWVhELWZjZllRNXNKenZvYTRIQTdhQzhwelR6bnkway00dGNYM2lIUlMxWlRYbEc3N3Bzd09mMDZpbVJYZHlvVXg1RWdkUjh1emh6a3E4a3Y2NW1JMGZ2b1prdFBxRTB0WUlORmpndUdnYkVzeklCR2syYkRwSE9WZFI5MkpYS2huQ1pBRGlEOXZUODJtOFM3aFY3VF9NRGdjLXVrZGdyZUEwbUw3SzRmWjRwb1dHZ1NXeU4zUG9sQ2dzWEV2WkZiTnYwNm9XNXpvR2hDeGd1elhKbXhGZnhXYzVKbVNrMnEtVmxONW5GWFpsWEc1WWNPVkpDUUwzNzJJVkh1Q2c2Q0xuS0hCZlNESFpNUVBhd3N3cnh0SE0yUTlsSmlkZW5OQ3cxQ3l3c2FnMURGQzdNY3o0NGtJQ1ZFaXk0MmdNZThQVXQ2bXlaamNjMzg1UlhWYVdzem5TUlRxN0dMaUJOODVPZlBHWDNzSlp1LUtoU1NheU1OQ2QzdVVSZHpReG5LcmlkcXRta18wdmhyZV9FMG5DVjdlcjJYOEtLQlJIN2xZeU8zaXBpNXQtVmhHbzJHaUFndWgyeEtVZG1vZDNqclIyVVR0WVdGR1pTSGNrOU1ubXd2Z3JDTmRDU0prUW9jMjZIZFBTWW5Xa3E4VUUxX3dBd3RaZ096UGp6aFlnWk5lSTFBczBodVA1cHU4ZFUwVkZFQXJzUHBQM2ZWVDRuampuckllaWdXX1JiOENZeEd6MEdyckk9)
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: 'Execute integration test on Chrome browser'
        script: |
          mkdir -p test-results
          chromedriver --port=4444 &
          flutter config --enable-web
          flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name chrome
          kill -9 $(lsof -ti tcp:4444)
          
        #test_report: test-results/flutter.json --version
        
      - name: 'Execute integration test on Safari browser'
        script: |
          mkdir -p test-results
          echo ` which safaridriver`
          sudo safaridriver --enable
          safaridriver --port=4444 &
          flutter config --enable-web
          flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name safari
          kill -9 $(lsof -ti tcp:4444)
          
        #test_report: test-results/flutter.json --version
      # - |
      #   # execute integration test on web
      #   mkdir -p test-results
      #   chromedriver --port=4444 &
      #   flutter config --enable-web
      #   flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/login_test.dart -d web-server --release --browser-name chrome
      #   ##flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/login_test.dart -d web-server --release --browser-name chrome --machine > test-results/flutter.json --version
      #   ##flutter -d web-server test --machine > test-results/flutter.json integration_test --release --browser-name chrome
    
    artifacts:
      - build/**/outputs/**/mapping.txt
      - screenshots/*.png
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - udivyanshu8@gmail.com
          - narayansiddharth@gmail.com
