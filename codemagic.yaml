# Automatically generated on 2021-07-30 UTC from https://codemagic.io/app/6103899fd885ed998448eb42/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  yaml-workflow:
    name: YAML Workflow
    max_build_duration: 60
    environment:
      vars:
        GCLOUD_KEY_FILE: Encrypted(Z0FBQUFBQmhFNWVKbDZ3M2RSVDRNOVFjdldfMVRvaVFBNlE5cUszb0RkWEpzc1hqbTlHY0cxR29BdERqOU43amVPX18ydV8tUHMyTDl1Z2c0UkxwRjJVQlVMdmtCNjdUY3JzX19ZSEdYR3FhRjJNSWRkNERfZmNOWi1sOE9GSU14dUdqbGQ3VlVwQmo5MURrNl9hWnNjcy1IMUFpWFBPdGM2TC1Pa3RXY09lQVYwT1o2eEdySGRvN2tUZ1VOdzY0eFl5RmZQUkMzQXFtR2FoenpReVpmdzdEZS1lQno1SG12M09CdVRuZnF1WDRIWDlMdXFObGFfb3Y4OFNwNVNtNUlIa28xY1JFdjhYOFp3akVqTXNJY3phbGFycnZaNjJYR01oaW1VQ3ZWcnhrWHp6NDYzcTNQSnVmODl6cEpwZ2tDSTZXcGtmZmRBSXdxeGdYUnZWdldsYzlFR3BMUGhJdnE1X19rZFc5dDZJSi1BVnBPQl9QTjBHblNQdmp5RlRtTTZXeHZzRXpZNTFqZm1HdFVuTVlmdUQ1dG1JRGxtMEo1TVVaRnozUENkSnBnRG4waWVxQ25VUk1BQ2c1ZFgtZlpWak5VWk0tZW01dFZ2dFRLbjZacTNHV0NoZDdqZzlYQ0NHbGtnQ1VfMHVDZ1pSN3pxMnB4T0g1N0lCMFhHOXNHVUxhNWhDTmRwdERzQncwUGJwS1FoWjFBMXc0Y2p1azY3TDBieDk3YU4wM0NUUFRPQ1BDTkxabjNKclYxVnN1bU9WY1J0YlY0SUtQRTV2NW1yQWQzbUR2bXdjMURqYnlkb0k3SW5ROE1sY0FtaDlHZkpzT2NJbktSOHlScTlkeGllLVJZbjN0V1VIVDA1Vmh3Z2ZkWWsyRTdjeU9BTU9qc25yajBiWHgySmxIS1FrdXRqa2FHLTNwSC1IR0Y0R041ZGtaMVY5RGx1M0RtYm96NlJVeElHemJweWN4VWRuYnRWTXJmRlV0ekhCeDM3MTNWWDBKMWhiYV90UlJwR0RjdVltMXVvcjdyZGROcnFmbDRPQUNSUjIxbHZuQjdJMmlHdDU3bm9YUjZjVmgzaEFta0Z5RXd5UmQ5SjMtWkxIWDFUa29WemltWHZCajBWMDRQLXRRS0tYZUJhX095RTVUeUg0dXZFTV9NN3FPTXFLR1U4bDBMdmpHTHVWX0sxTnFnOFBodUVvYkV2R2ktVzJrbVJJSG9INjRMOEp4a1ZZblhMVExZZElEeXU1cHp4M0dSZVlNZUljRDl5eC1xVmNHMlh6cTgwc2RYRlBMeU1kV1ptaVFmcThqNnZXYXI2Z2FXRU14UUFzX2JlRHhlZ2xLRnVvZzdmUF9tVmppdEdXRllaNG02SXdhS19EYnBnTnc1S0t2enBDYnMyX0ozcVd1dTlpUmdrWFBtVWItQUpPbC1JMkxfV2xSRU9Fem5oLWdVM3dYNmhuVUZldTk4eGlZQ0dQUGxGdWtQTm56cjhEMzRKRjVtS3Q5RHFGbkFxNEk3UmtWcnFGcWpXMTY2cXVnbkxvMEtXNVRKWC1GelNkMlZqVHhlcFJBTlFsSkY4OUs4Q0F2SzA3ZUhvT19qMklOX01JMXc5NnI4WWZuOEtVTEZSMUpKNWV3RWJQMjJRTmR3cGZxY01LWlRuUVFmd090RVNLeEhnVUZDT3NValNERC1qYjY3NEtJdkdtMjNaR0Y5TkMwYzFFNmVjaGlHSndpamRFM3dIa2M3OXdTQjl2RW9JYnFxYUs1OGlVb0dZeHhNaUdBTXdPVFBFeENoMjU2WElBc1dDcmFSQXBlTHVVcVFjMGFsNDBuWk1DQU1ZbWd5cEtvekpTWmFEdDgwRkVtX0R4eF9NS0ZNcDd1T1gxMVpqa0gwbllSc2JKbU9wVmVFb3ZkWFRDaDVlNWtBVTk2SDEyMWw1SkNOOHA2YjRFSkZ3QnZPSzJlWVBmOWpNanRrVldwT0ppOTJ3enhRbWVScy1TTXpFLVptWEpiSEhiUmx2N3NuX0xhRy1nYzR2YkhORVEyQmZwcWt1dHlWY1ZaMklrNWRFZ2g4QWNmX1R5ZGV4dmdFU3ZnS2ZoTU5JdXRuVXNacnBPQTBaRU9tTi1MSDdpY3pTdmtBT0d1aHBVTWJfYlMyZXZUa2lwOHl0bjdrOTktVkxtREpDOTNIdm80X0hZNFJ0aWpxN0xRREVFUFBkcUV6OHVvM1U1R011NkdHTExncnl5SWF1Nk8zTHUweGVYam9XQlV2NnY0TDBuX2kzRmh4OGUxUmREdDNJVnZMaHd5bEpTNEd2V3ZVVGh6ZnhOLTZLMEpwa2dGcllwaFBLeVBYd0M2VTFqZDAzLWZLZGRWcWNOLTF4QmJpQ3VmV1BRQW5FWVdKckFzTWpsaGotRk4tQ0g3VHRKX3R3ZUZMbUlMc1BaVlZiX1o2UW1KS2hoTDd1TWh5cW5mWXp2elBUR0EzNUcyaENUU2tyemY1bG9zV3I1WWF4SzFqSW1kaW9YLWRYcEFxZVFjUk81VnJuZG0waWhudGJDU2pCV0hEOEdqcFBoeTl5VC1feWNneGxmTzk1MFI2d1U2VGNsTFEwazZ6dDlxMnJUUnNhb1ZWcGFORndVYXRuendXb0lxc09LdkhmQ3VReW1yLUQ2QmdORUpIYUY2NElOcmhxWmtYczB5cEhDemdnT0ItV2VtQ0J4SXl4UExaQkNiTkhKSVk4MS1RS0JsSVRfMTdXVXJoUFZXclJybllaNHU0RUxlcWF3MHFVN3dZZmtydFdCZmk5UDh6d0liLWZuMm1Yc2VQVUxJajE0VWIwMWNhaEM3V1RMb1A5OVFoSW5BWV9MWWdlU2N6T2V3c0JHU3g2aFlLc3VOMUl6Wi1SOXdUdW1MNk45TTNkdlMyNk1fdWQwWndpQklZXzdnMFNzVEdVMjFBaW40MDJ4YTRMb0VSQ2xGUkVmOTBkYlBfXy14RW5IdHk3a1VVUmdlVC1rcE9pc3lpd2NKNm9kMHQtTmtrVDBRWmQ0aGU0M291NXFJaUpjWE9aTXAtMmoyNHYzU3BlajB2Uno2OTdQcmMxZElDb1FBTXBzdVVhdWs4aXM2RWtRNHhwRmZOYnBxdXpoT0UwYzBJeldha0dSUXpxTXM1dS1rTlQ0ZlJYdWlXVk8xUkFvUzdnZ25IUjQtdDA3X0lWUVgtNHUzcFZKTU1hUWQ4akQyMHdINldxMWN4eVNzREJBRDktbnRkTG1Dck9IaHg3YmJtQUFlbG0zdlZ3ME12a3lPUVlMa242OFNpRDA4QnlXeFdOR3hQZGU5Q1Y4QjdwblZlbzFTMHBmcjZfZXo0NDZkelRJN2NQWHpZVEw0ZWlET0pOV2M0bnR3cGJnNUlXd0UxQU12dlNvZ2dnWnBoZVZXUXI2T0ZLWVdXSGpHNG9CU0NhVXd0Ym40a3FxZFZtcmlVR1hwY19faXgxRHFSd0I3dFlFaklCRjZ4MVNFX2ZlQzBBand3c3oyTmJZVmpueUJHN1RSZ2ozTzdMZG9OUlJ2Z2MxVDVJT2RSYlQ4RXZQWHFfMXFVcko4ZjdWUWFDY0psenJjdm1VNzZqSkVJQzY4OWstZHZIUkQyWGNyV0ktVVpfa3h5anhmUEFDVERRWGtiWE85b09STUdaU3lJLXQ2Q2M4c1VEZWEyVHN1M18ybjlPLWVoRllVcFZUYlFkUlhGN3R1V2pIYWJSZ0w2RDZTM0FMSF9YMURYWlJyVFc3RkE5endMUnN2X3RLU1Y0b2wyMmZtajBTbGtSV1Q2dlJCSFlodkM5ZTFrVUROdGk0cklMcC02NTlMcWdYQldSaVR6Qzg5WlJ5ek90QWJVbl94VkU3dGZXcmNsRTlrQ0NVTFlLN09mZW9Pa2d6TnBwcTVCYnF4eTgtRlUzRE9QQjNoRFE3dW9ndFNRR1NBR0pLbVlCU2R6akp3czFQWGlSSlJ6Wlk0RXZsNTM4U0RMTy1tWlk4LXpCREF6WVBJOUVWUlhURGEzZGl3UzFXUHBqQkQ0bHlybEI5a0ctX3QtUUs1TEpoa3J3djFjRTFucHV5MUdRTTA5R0dYcjRmcExTWkZWSW9jRFpMUEU2NXJURHd6UzNrV3RwTWNRU1libUdUT19ibG1UT3lrcExldGxTdXYtaDZNUWN0Z3lGdk1JcjRSeElZNmhkNGNwRGctNUQ0WjNXRW13WHVXd2U2UWZscGlwa3g1V0IxWTVLUmx4WkRIN1hZTDJfUzM2QWEweE12ZThJZnE0Ym9DakJSWi0wTmJsOUV5RmduXzFSNE5DdDNCZmtWQzNReEN0V095T0dmOXAzZXYtQ2NIRzVBQUVKQU96RVdOM2xuUW9SQmR3RnpaOVc4Nl9STnVlTjZtN0NQRThUNEUwSjloOERSN1JZaXNWRmstMml3bWIya2ZNeXZybU5qZ3JWOHVOZ3BidXBkWFRHM0ctUHUyZWlBNHkxZnNROVkwRGlFbHdnRHZPSVNhUHlNbFJoWE5uYVB1R256REdvLU4yRG8xbnE2QW0tSHBjNzZ3XzltOU5WT1EyM2I2OUJVcWNYNXRFQ2VvcmJEWWY2eEllcjhfQ040WUxiSVlZVlhvTm4xUzFNWTRUeGtzTnV4ckk1SWtyZ043NzZxQm84c3R3aHZKWVdNdzROSHFjNE10aG5wanJqREpqWENTdWREWk54UXZtNGVSblhmbklmSVZETlNxVHBPQWZwWUJyZTV5aVBUV1lZNG90bi1RRzBSSjh2THFPb0N2LVRyTkpzVEhabjlRNTlzSzdwQlU1bmtXZWNLczZHeERHOThFak9lWXoxdkNFWGRSbWlRMnJpaTRSUmhISE9RNi1XeEpBNkJ3TFlnX2ZYNDRGQ0poY241SVAzQk4zRzZWRFRxNGdBNjd2bTRWU0lja3JWRTI1aXpmU29tTGphNWM4clltRDVWbmpEZS01aVhBOFVHWkxGZ2FNVUVDRmFZTTRZTXhYZEVyUzE0V3FzVmFlaktKLXhnSTVxTDhLR3piUEstOHZUTTFBbFphSGxPaGZILWpvQXVjT01oWFZsM3ptek5rSldwNVdUMnR2dGJKTjhBaWNNdzdNcDd3X190QkNsUjNOODZ3ZXF1NlN1RVR6S2ZVRWR4UHhFamQ2dV92WHlTZmE4UkRrREsxMG5NQzhCN0lUUlVCSmRtc0dOZ0o1VFhtR2JGUUVJMEFYSFZTU25Vc0ZQQ1JwRlgySTFybmw0aUQxN3c4U1JsQ011ZzRUVG9qY1lrX0hrWkhFVmZySXBrbGV4OEd2NWFEU3BrRkg1ajhMZENNLUhuMVAwcGJzZXlXTlFPZzFUUTg5ZzFhek1rcHlvX3pVRkNHb3MxUzBGeHlFUTJ6ajIxOGs0R0p1Z2pReDl4QVFuazY0R2R2RlZ0OFVBa2xLdEZWZjBrMUY1eXN2TEhPS2l3Y0pyQXpIOGFOVjNuU084THNQS3V2M05UMmNZNXNBV1ZmWlkxRkxGV0FvdGtreTgyaU5CLVRNanB4eDB6RDFnaldxNTROQjEtNWFoN19EOXdkcW1vMnlDZXIyMTNfOWRZempWYWlBU1RNX2xuVmlibWVHTTVrX2lGVF9zMlJ0c29JSGxjcmdPZjh4TWFhcjBZRTBvaUJ6ZjhxUmdWU3A5Y2JYSjJQdXhteEVVZ1VzenVRNXdFQ0M5U1d1M2wwcVBNcFJPSGI5NHdEMGgzaEJMczVuNUU0MW80a3dwdmgtcFIxblZpSlAzY281WHVoR2dYOFhpV1pBZEREdjV0b3plTEJmbElNVENLUGQ5RnZfc3M9)
      flutter: stable
      xcode: latest
      cocoapods: default
    scripts:
      - name: 'Execute integration test on Chrome browser'
        script: |
          mkdir -p test-results
          chromedriver --port=4444 &
          flutter config --enable-web
          flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name chrome
          kill -9 $(lsof -ti tcp:4444)
          
        #test_report: test-results/flutter.json --version
        
      - name: 'Execute integration test on Safari browser'
        script: |
          mkdir -p test-results
          echo ` which safaridriver`
          sudo safaridriver --enable
          safaridriver --port=4444 &
          flutter config --enable-web
          flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/app_test.dart -d web-server --release --browser-name safari
          kill -9 $(lsof -ti tcp:4444)
          
        #test_report: test-results/flutter.json --version
      # - |
      #   # execute integration test on web
      #   mkdir -p test-results
      #   chromedriver --port=4444 &
      #   flutter config --enable-web
      #   flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/login_test.dart -d web-server --release --browser-name chrome
      #   ##flutter drive --driver=test_driver/integration_driver.dart --target=integration_test/login_test.dart -d web-server --release --browser-name chrome --machine > test-results/flutter.json --version
      #   ##flutter -d web-server test --machine > test-results/flutter.json integration_test --release --browser-name chrome
    
    artifacts:
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - udivyanshu8@gmail.com
          - narayansiddharth@gmail.com
